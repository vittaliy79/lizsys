import React, { useState, useEffect } from 'react';
import axios from 'axios';

// --- AssetDocumentsModal: –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –∞–∫—Ç–∏–≤–∞ ---
function AssetDocumentsModal({ assetId, show, onClose }) {
  const [documents, setDocuments] = useState([]);
  const [maintenanceFile, setMaintenanceFile] = useState(null);
  const [insuranceFile, setInsuranceFile] = useState(null);
  const [loading, setLoading] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
  const fetchDocuments = async () => {
    if (!assetId) return;
    setLoading(true);
    try {
      const res = await axios.get(`/api/assets/${assetId}/files`);
      setDocuments(Array.isArray(res.data) ? res.data : []);
    } catch (err) {
      setDocuments([]);
    }
    setLoading(false);
  };

  useEffect(() => {
    if (show && assetId) {
      fetchDocuments();
      setMaintenanceFile(null);
      setInsuranceFile(null);
    }
    // eslint-disable-next-line
  }, [show, assetId]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
  const handleUpload = async (e) => {
    e.preventDefault();
    if (!assetId) return;
    if (!maintenanceFile && !insuranceFile) return;
    const form = new FormData();
    if (maintenanceFile) form.append('maintenanceFile', maintenanceFile);
    if (insuranceFile) form.append('insuranceFile', insuranceFile);
    try {
      await axios.post(`/api/assets/${assetId}/upload`, form, {
        headers: { 'Content-Type': 'multipart/form-data' },
      });
      setMaintenanceFile(null);
      setInsuranceFile(null);
      fetchDocuments();
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤');
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
  const handleDeleteDoc = async (docId) => {
    if (!assetId || !docId) return;
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?')) return;
    try {
      await axios.delete(`/api/assets/${assetId}/files/${docId}`);
      fetchDocuments();
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞');
    }
  };

  return show ? (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
      <div className="bg-white rounded-lg w-[720px] p-6">
        <h2 className="text-xl font-semibold mb-4">–§–∞–π–ª—ã –∫–ª–∏–µ–Ω—Ç–∞</h2>
        <form onSubmit={handleUpload} className="space-y-2 mb-4">
          <div>
            <label className="block mb-1 font-medium">–î–æ–∫—É–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è</label>
            <input
              type="file"
              onChange={e => setMaintenanceFile(e.target.files[0])}
              className="w-full border border-gray-300 rounded px-3 py-2"
              accept=".pdf,.jpg,.png"
            />
          </div>
          <div>
            <label className="block mb-1 font-medium">–°—Ç—Ä–∞—Ö–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç</label>
            <input
              type="file"
              onChange={e => setInsuranceFile(e.target.files[0])}
              className="w-full border border-gray-300 rounded px-3 py-2"
              accept=".pdf,.jpg,.png"
            />
          </div>
          <div className="flex justify-end">
            <button
              type="submit"
              className="px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700"
              disabled={loading}
            >
              –ó–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
          </div>
        </form>
        {loading ? (
          <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        ) : (
          <>
            {(!documents || documents.length === 0) ? (
              <p>–ù–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.</p>
            ) : (
              <table className="w-full border text-sm">
                <thead className="bg-gray-100">
                  <tr>
                    <th className="border px-2 py-1 text-left">–¢–∏–ø</th>
                    <th className="border px-2 py-1 text-left">–§–∞–π–ª</th>
                    <th className="border px-2 py-1 text-left">–î–µ–π—Å—Ç–≤–∏—è</th>
                  </tr>
                </thead>
                <tbody>
                  {documents.map((doc) => {
                    const docType = doc.filename.toLowerCase().includes('maintenance')
                      ? '–î–æ–∫—É–º–µ–Ω—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'
                      : doc.filename.toLowerCase().includes('insurance')
                      ? '–°—Ç—Ä–∞—Ö–æ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç'
                      : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                    return (
                      <tr key={doc.id}>
                        <td className="border px-2 py-1">{docType}</td>
                        <td className="border px-2 py-1 truncate">
                          {doc.filename.length > 30 ? doc.filename.slice(0, 30) + '...' : doc.filename}
                        </td>
                        <td className="border px-2 py-1">
                          <div className="flex gap-2">
                            <a
                              href={`/api/assets/${assetId}/files/${doc.filename}?t=${Date.now()}`}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="text-blue-600 hover:underline"
                            >
                              üìÇ –û—Ç–∫—Ä—ã—Ç—å
                            </a>
                            <button
                              className="text-red-600 hover:underline"
                              onClick={() => handleDeleteDoc(doc.id)}
                              type="button"
                            >
                              üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                            </button>
                          </div>
                        </td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
            )}
          </>
        )}
        <div className="flex justify-end mt-4">
          <button
            onClick={onClose}
            className="px-4 py-2 rounded bg-gray-300 hover:bg-gray-400"
          >
            –ó–∞–∫—Ä—ã—Ç—å
          </button>
        </div>
      </div>
    </div>
  ) : null;
}

export default function AssetsPage() {
  const [assets, setAssets] = useState(() => []);
  const [clients, setClients] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [showModal, setShowModal] = useState(false);
  const [newAsset, setNewAsset] = useState({ name: '', type: '', vin: '', maintenanceInfo: '', insuranceInfo: '', inspectionDate: '', location: '', status: '', clientId: '', maintenanceFile: null, insuranceFile: null });
  const [activeTab, setActiveTab] = useState('main');
  const [editingAssetId, setEditingAssetId] = useState(null);
  // --- AssetDocumentsModal state
  const [showDocumentsModal, setShowDocumentsModal] = useState(false);
  const [documentsAssetId, setDocumentsAssetId] = useState(null);

  const fetchAssets = async () => {
    try {
      const res = await axios.get('/api/assets');
      console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤—ã:', res.data);
      if (Array.isArray(res.data)) {
        setAssets(res.data);
      } else if (res.data && Array.isArray(res.data.assets)) {
        setAssets(res.data.assets);
      } else {
        console.warn('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ç–∏–≤–æ–≤', res.data);
        setAssets([]);
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫—Ç–∏–≤–æ–≤', err);
    }
  };

  const fetchClients = async () => {
    try {
      const res = await axios.get('/api/clients');
      setClients(Array.isArray(res.data) ? res.data : res.data.clients || []);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤', err);
    }
  };

  useEffect(() => {
    fetchAssets();
    fetchClients();
  }, []);

  if (!Array.isArray(assets)) return null;

  const filteredAssets = assets.filter(asset =>
    (asset.name && asset.name.toLowerCase().includes(searchQuery.toLowerCase())) ||
    (asset.type && asset.type.toLowerCase().includes(searchQuery.toLowerCase())) ||
    (asset.status && asset.status.toLowerCase().includes(searchQuery.toLowerCase())) ||
    (clients.find(c => c.id === asset.clientId)?.name.toLowerCase().includes(searchQuery.toLowerCase()))
  );

  const openNewAssetModal = () => {
    setNewAsset({ name: '', type: '', vin: '', maintenanceInfo: '', insuranceInfo: '', inspectionDate: '', location: '', status: '', clientId: '', maintenanceFile: null, insuranceFile: null });
    setEditingAssetId(null);
    setShowModal(true);
    setActiveTab('main');
  };

  const openEditAssetModal = (asset) => {
    setNewAsset({
      name: asset.name || '',
      type: asset.type || '',
      vin: asset.vin || '',
      maintenanceInfo: asset.maintenanceInfo || '',
      insuranceInfo: asset.insuranceInfo || '',
      inspectionDate: asset.inspectionDate || '',
      location: asset.location || '',
      status: asset.status || '',
      clientId: asset.clientId || '',
      maintenanceFile: null,
      insuranceFile: null
    });
    setEditingAssetId(asset.id);
    setShowModal(true);
    setActiveTab('main');
  };

  const resetForm = () => {
    setNewAsset({ name: '', type: '', vin: '', maintenanceInfo: '', insuranceInfo: '', inspectionDate: '', location: '', status: '', clientId: '', maintenanceFile: null, insuranceFile: null });
    setEditingAssetId(null);
    setShowModal(false);
  };

  const handleDeleteAsset = async (id) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∞–∫—Ç–∏–≤?')) {
      try {
        await axios.delete(`/api/assets/${id}`);
        fetchAssets();
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞:', err);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞.');
      }
    }
  };

  const handleArchiveAsset = (id) => {
    alert('–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ.');
  };

  const handleModalChange = (field, value) => {
    setNewAsset(prev => ({ ...prev, [field]: value }));
  };

  const handleModalSubmit = async (e) => {
    e.preventDefault();
    if (!newAsset.name || !newAsset.type || !newAsset.status || !newAsset.clientId) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
      return;
    }

    try {
      const payload = {
        name: newAsset.name,
        type: newAsset.type,
        vin: newAsset.vin,
        maintenanceInfo: newAsset.maintenanceInfo,
        insuranceInfo: newAsset.insuranceInfo,
        inspectionDate: newAsset.inspectionDate,
        location: newAsset.location,
        status: newAsset.status,
        clientId: newAsset.clientId,
      };

      let assetId;
      if (editingAssetId) {
        await axios.put(`/api/assets/${editingAssetId}`, payload);
        assetId = editingAssetId;
      } else {
        const res = await axios.post('/api/assets', payload);
        assetId = res.data?.id;
      }

      // –û—Ç–¥–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
      if (assetId && (newAsset.maintenanceFile || newAsset.insuranceFile)) {
        const fileForm = new FormData();
        if (newAsset.maintenanceFile) {
          fileForm.append('maintenanceFile', newAsset.maintenanceFile);
        }
        if (newAsset.insuranceFile) {
          fileForm.append('insuranceFile', newAsset.insuranceFile);
        }
        await axios.post(`/api/assets/${assetId}/upload`, fileForm, {
          headers: { 'Content-Type': 'multipart/form-data' },
        });
      }
      fetchAssets();
      resetForm();
    } catch (err) {
      console.error(err);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞.');
    }
  };

  // --- –§–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ñ–∞–π–ª–æ–≤
  const handleFileUpload = async (e) => {
    e.preventDefault();
    if (!selectedAssetId) return;
    const fileForm = new FormData();
    if (newAsset.maintenanceFile) {
      fileForm.append('maintenanceFile', newAsset.maintenanceFile);
    }
    if (newAsset.insuranceFile) {
      fileForm.append('insuranceFile', newAsset.insuranceFile);
    }
    try {
      await axios.post(`/api/assets/${selectedAssetId}/upload`, fileForm, {
        headers: { 'Content-Type': 'multipart/form-data' },
      });
      // –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
      const res = await axios.get(`/api/assets/${selectedAssetId}/files`);
      setSelectedAssetFiles(res.data || []);
      setNewAsset(prev => ({ ...prev, maintenanceFile: null, insuranceFile: null }));
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤:', err);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã.');
    }
  };

  return (
    <div className="p-4">
      <div className="flex justify-between items-center mb-4">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –∞–∫—Ç–∏–≤–∞–º..."
          value={searchQuery}
          onChange={e => setSearchQuery(e.target.value)}
          className="border rounded px-3 py-2 w-1/3"
        />
        <button
          onClick={openNewAssetModal}
          className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded flex items-center"
        >
          <span className="mr-2">+</span> –î–æ–±–∞–≤–∏—Ç—å –ê–∫—Ç–∏–≤
        </button>
      </div>

      <table className="w-full border-collapse border border-gray-300">
        <thead>
          <tr className="bg-gray-100">
            <th className="border border-gray-300 px-4 py-2">–ö–ª–∏–µ–Ω—Ç</th>
            <th className="border border-gray-300 px-4 py-2">–¢–∏–ø</th>
            <th className="border border-gray-300 px-4 py-2">–ú–æ–¥–µ–ª—å</th>
            <th className="border border-gray-300 px-4 py-2">VIN</th>
            <th className="border border-gray-300 px-4 py-2">–°—Ç–∞—Ç—É—Å</th>
            <th className="border border-gray-300 px-4 py-2">–û—Å–º–æ—Ç—Ä</th>
            <th className="border border-gray-300 px-4 py-2">–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</th>
            <th className="border border-gray-300 px-4 py-2">–°—Ç—Ä–∞—Ö–æ–≤–∫–∞</th>
            <th className="border border-gray-300 px-4 py-2">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</th>
            <th className="border border-gray-300 px-4 py-2">–°–æ—Å—Ç–æ—è–Ω–∏–µ</th>
            <th className="border border-gray-300 px-4 py-2">–î–æ–∫—É–º–µ–Ω—Ç—ã</th>
            <th className="border border-gray-300 px-4 py-2">–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {!filteredAssets || filteredAssets.length === 0 ? (
            <tr>
              <td colSpan="12" className="text-center py-4">–ê–∫—Ç–∏–≤—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</td>
            </tr>
          ) : (
            filteredAssets.map(asset => (
              <tr key={asset.id} className="hover:bg-gray-50">
                <td className="border border-gray-300 px-4 py-2">{clients.find(c => c.id === asset.clientId)?.name || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.type}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.name}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.vin || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.status}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.inspectionDate || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.maintenanceInfo || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.insuranceInfo || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.location || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">{asset.status || '‚Äî'}</td>
                <td className="border border-gray-300 px-4 py-2">
                  <button
                    onClick={() => { setDocumentsAssetId(asset.id); setShowDocumentsModal(true); }}
                    className="text-blue-600 hover:underline"
                  >
                    üìÇ –§–∞–π–ª–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞: {asset.fileCount || 0}
                  </button>
                </td>
                <td className="border border-gray-300 px-4 py-2 space-x-2">
                  <button
                    onClick={() => openEditAssetModal(asset)}
                    title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                    className="hover:text-blue-600"
                  >
                    ‚úèÔ∏è
                  </button>
                  <button
                    onClick={() => handleDeleteAsset(asset.id)}
                    title="–£–¥–∞–ª–∏—Ç—å"
                    className="hover:text-red-600"
                  >
                    üóëÔ∏è
                  </button>
                  <button
                    onClick={() => handleArchiveAsset(asset.id)}
                    title="–ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
                    className="hover:text-gray-600"
                  >
                    üì¶
                  </button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>

      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
          <div className="bg-white rounded-lg w-96 p-6">
            <h2 className="text-xl font-semibold mb-4">{editingAssetId ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ê–∫—Ç–∏–≤' : '–î–æ–±–∞–≤–∏—Ç—å –ê–∫—Ç–∏–≤'}</h2>
            <div className="flex mb-4 border-b">
              <button
                type="button"
                className={`px-4 py-2 ${activeTab === 'main' ? 'border-b-2 border-green-600 font-semibold' : ''}`}
                onClick={() => setActiveTab('main')}
              >
                –û—Å–Ω–æ–≤–Ω–æ–µ
              </button>
              <button
                type="button"
                className={`px-4 py-2 ${activeTab === 'docs' ? 'border-b-2 border-green-600 font-semibold' : ''}`}
                onClick={() => setActiveTab('docs')}
              >
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
              </button>
            </div>
            <form onSubmit={handleModalSubmit} className="space-y-4">
              {activeTab === 'main' && (
                <>
                  <div>
                    <label className="block mb-1 font-medium">–ö–ª–∏–µ–Ω—Ç</label>
                    <select
                      value={newAsset.clientId}
                      onChange={e => handleModalChange('clientId', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                      required
                    >
                      <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞</option>
                      {clients.map(client => (
                        <option key={client.id} value={client.id}>{client.name}</option>
                      ))}
                    </select>
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
                    <input
                      type="text"
                      value={newAsset.name}
                      onChange={e => handleModalChange('name', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                      required
                    />
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–¢–∏–ø</label>
                    <select
                      value={newAsset.type}
                      onChange={e => handleModalChange('type', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                      required
                    >
                      <option value="" disabled>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                      <option value="–ê–≤—Ç–æ–º–æ–±–∏–ª—å">–ê–≤—Ç–æ–º–æ–±–∏–ª—å</option>
                      <option value="–°–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞">–°–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞</option>
                      <option value="–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
                      <option value="–ü—Ä–æ—á–µ–µ">–ü—Ä–æ—á–µ–µ</option>
                    </select>
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">VIN</label>
                    <input
                      type="text"
                      value={newAsset.vin}
                      onChange={e => handleModalChange('vin', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                    />
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–°—Ç–∞—Ç—É—Å</label>
                    <input
                      type="text"
                      value={newAsset.status}
                      onChange={e => handleModalChange('status', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                      required
                    />
                  </div>
                </>
              )}

              {activeTab === 'docs' && (
                <>
                  <div>
                    <label className="block mb-1 font-medium">–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ</label>
                    <input
                      type="text"
                      value={newAsset.maintenanceInfo}
                      onChange={e => handleModalChange('maintenanceInfo', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                    />
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–°—Ç—Ä–∞—Ö–æ–≤–∫–∞</label>
                    <input
                      type="text"
                      value={newAsset.insuranceInfo}
                      onChange={e => handleModalChange('insuranceInfo', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                    />
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–î–∞—Ç–∞ –æ—Å–º–æ—Ç—Ä–∞</label>
                    <input
                      type="date"
                      value={newAsset.inspectionDate}
                      onChange={e => handleModalChange('inspectionDate', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                    />
                  </div>
                  <div>
                    <label className="block mb-1 font-medium">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                    <input
                      type="text"
                      value={newAsset.location}
                      onChange={e => handleModalChange('location', e.target.value)}
                      className="w-full border border-gray-300 rounded px-3 py-2"
                    />
                  </div>
                </>
              )}
              <div className="flex justify-end space-x-2">
                <button
                  type="button"
                  onClick={resetForm}
                  className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-100"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  type="submit"
                  className="px-4 py-2 rounded bg-green-600 text-white hover:bg-green-700"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
      <AssetDocumentsModal
        assetId={documentsAssetId}
        show={showDocumentsModal}
        onClose={() => setShowDocumentsModal(false)}
      />
    </div>
  );
}